"id": "chatcmpl-CSTM9wAIHCI1vogJiEBi1xcwxCWC8",
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "message": {
        "content": "{\n  \"contract\": {\n    \"tokens\": {\n      \"scalars\": [\n        \"plant_name\",\n        \"location\",\n        \"from_date\",\n        \"to_date\",\n        \"print_date\",\n        \"recipe_code\",\n        \"report_title\",\n        \"company_name\",\n        \"page_info\"\n      ],\n      \"row_tokens\": [\n        \"row_sl_no\",\n        \"row_material_name\",\n        \"row_set_wt\",\n        \"row_ach_wt\",\n        \"row_error_kg\",\n        \"row_error_pct\"\n      ],\n      \"totals\": [\n        \"total_set_wt\",\n        \"total_ach_wt\",\n        \"total_error_kg\",\n        \"total_error_pct\"\n      ]\n    },\n    \"mapping\": {\n      \"plant_name\": \"PARAM:plant_name\",\n      \"location\": \"PARAM:location\",\n      \"from_date\": \"PARAM:from_date\",\n      \"to_date\": \"PARAM:to_date\",\n      \"print_date\": \"PARAM:print_date\",\n      \"recipe_code\": \"PARAM:recipe_code\",\n      \"report_title\": \"'Consumption report'\",\n      \"company_name\": \"'Indian Industrial Machines Pvt. Ltd.'\",\n      \"page_info\": \"PARAM:page_info\",\n      \"row_sl_no\": \"ROW_NUMBER() OVER (ORDER BY TRIM(long_bins.material_name) ASC)\",\n      \"row_material_name\": \"TRIM(long_bins.material_name)\",\n      \"row_set_wt\": \"SUM(long_bins.set_wt_kg)\",\n      \"row_ach_wt\": \"SUM(long_bins.ach_wt_kg)\",\n      \"row_error_kg\": \"SUM(long_bins.ach_wt_kg) - SUM(long_bins.set_wt_kg)\",\n      \"row_error_pct\": \"CASE WHEN SUM(long_bins.set_wt_kg) = 0 THEN NULL ELSE (SUM(long_bins.ach_wt_kg) - SUM(long_bins.set_wt_kg)) / SUM(long_bins.set_wt_kg) * 100 END\",\n      \"total_set_wt\": \"SUM(recipes.bin1_sp + recipes.bin2_sp + recipes.bin3_sp + recipes.bin4_sp + recipes.bin5_sp + recipes.bin6_sp + recipes.bin7_sp + recipes.bin8_sp + recipes.bin9_sp + recipes.bin10_sp + recipes.bin11_sp + recipes.bin12_sp)\",\n      \"total_ach_wt\": \"SUM(recipes.bin1_act + recipes.bin2_act + recipes.bin3_act + recipes.bin4_act + recipes.bin5_act + recipes.bin6_act + recipes.bin7_act + recipes.bin8_act + recipes.bin9_act + recipes.bin10_act + recipes.bin11_act + recipes.bin12_act)\",\n      \"total_error_kg\": \"SUM((recipes.bin1_act - recipes.bin1_sp) + (recipes.bin2_act - recipes.bin2_sp) + (recipes.bin3_act - recipes.bin3_sp) + (recipes.bin4_act - recipes.bin4_sp) + (recipes.bin5_act - recipes.bin5_sp) + (recipes.bin6_act - recipes.bin6_sp) + (recipes.bin7_act - recipes.bin7_sp) + (recipes.bin8_act - recipes.bin8_sp) + (recipes.bin9_act - recipes.bin9_sp) + (recipes.bin10_act - recipes.bin10_sp) + (recipes.bin11_act - recipes.bin11_sp) + (recipes.bin12_act - recipes.bin12_sp))\",\n      \"total_error_pct\": \"CASE WHEN SUM(recipes.bin1_sp + recipes.bin2_sp + recipes.bin3_sp + recipes.bin4_sp + recipes.bin5_sp + recipes.bin6_sp + recipes.bin7_sp + recipes.bin8_sp + recipes.bin9_sp + recipes.bin10_sp + recipes.bin11_sp + recipes.bin12_sp) = 0 THEN NULL ELSE ((SUM(recipes.bin1_act + recipes.bin2_act + recipes.bin3_act + recipes.bin4_act + recipes.bin5_act + recipes.bin6_act + recipes.bin7_act + recipes.bin8_act + recipes.bin9_act + recipes.bin10_act + recipes.bin11_act + recipes.bin12_act) - SUM(recipes.bin1_sp + recipes.bin2_sp + recipes.bin3_sp + recipes.bin4_sp + recipes.bin5_sp + recipes.bin6_sp + recipes.bin7_sp + recipes.bin8_sp + recipes.bin9_sp + recipes.bin10_sp + recipes.bin11_sp + recipes.bin12_sp)) / SUM(recipes.bin1_sp + recipes.bin2_sp + recipes.bin3_sp + recipes.bin4_sp + recipes.bin5_sp + recipes.bin6_sp + recipes.bin7_sp + recipes.bin8_sp + recipes.bin9_sp + recipes.bin10_sp + recipes.bin11_sp + recipes.bin12_sp)) * 100 END\"\n    },\n    \"unresolved\": [],\n    \"join\": {\n      \"parent_table\": \"recipes\",\n      \"parent_key\": \"\",\n      \"child_table\": \"\",\n      \"child_key\": \"\"\n    },\n    \"date_columns\": {\n      \"recipes\": \"start_time\"\n    },\n    \"filters\": {\n      \"optional\": {\n        \"recipe_code\": \"recipes.recipe_name\"\n      }\n    },\n    \"reshape_rules\": [\n      {\n        \"purpose\": \"Produce rows dataset\",\n        \"strategy\": \"UNION_ALL\",\n        \"explain\": \"Unpivot bin1..bin12 columns from recipes into long form (long_bins) with material name and set/ach weights. Trim names; drop blanks before grouping.\",\n        \"columns\": [\n          {\n            \"as\": \"material_name\",\n            \"from\": [\n              \"recipes.bin1_content\",\n              \"recipes.bin2_content\",\n              \"recipes.bin3_content\",\n              \"recipes.bin4_content\",\n              \"recipes.bin5_content\",\n              \"recipes.bin6_content\",\n              \"recipes.bin7_content\",\n              \"recipes.bin8_content\",\n              \"recipes.bin9_content\",\n              \"recipes.bin10_content\",\n              \"recipes.bin11_content\",\n              \"recipes.bin12_content\"\n            ]\n          },\n          {\n            \"as\": \"set_wt_kg\",\n            \"from\": [\n              \"recipes.bin1_sp\",\n              \"recipes.bin2_sp\",\n              \"recipes.bin3_sp\",\n              \"recipes.bin4_sp\",\n              \"recipes.bin5_sp\",\n              \"recipes.bin6_sp\",\n              \"recipes.bin7_sp\",\n              \"recipes.bin8_sp\",\n              \"recipes.bin9_sp\",\n              \"recipes.bin10_sp\",\n              \"recipes.bin11_sp\",\n              \"recipes.bin12_sp\"\n            ]\n          },\n          {\n            \"as\": \"ach_wt_kg\",\n            \"from\": [\n              \"recipes.bin1_act\",\n              \"recipes.bin2_act\",\n              \"recipes.bin3_act\",\n              \"recipes.bin4_act\",\n              \"recipes.bin5_act\",\n              \"recipes.bin6_act\",\n              \"recipes.bin7_act\",\n              \"recipes.bin8_act\",\n              \"recipes.bin9_act\",\n              \"recipes.bin10_act\",\n              \"recipes.bin11_act\",\n              \"recipes.bin12_act\"\n            ]\n          }\n        ]\n      }\n    ],\n    \"row_computed\": {\n      \"row_error_kg\": \"SUM(long_bins.ach_wt_kg) - SUM(long_bins.set_wt_kg)\",\n      \"row_error_pct\": \"CASE WHEN SUM(long_bins.set_wt_kg) = 0 THEN NULL ELSE (SUM(long_bins.ach_wt_kg) - SUM(long_bins.set_wt_kg)) / SUM(long_bins.set_wt_kg) * 100 END\"\n    },\n    \"totals_math\": {\n      \"total_set_wt\": \"SUM(recipes.bin1_sp + recipes.bin2_sp + recipes.bin3_sp + recipes.bin4_sp + recipes.bin5_sp + recipes.bin6_sp + recipes.bin7_sp + recipes.bin8_sp + recipes.bin9_sp + recipes.bin10_sp + recipes.bin11_sp + recipes.bin12_sp)\",\n      \"total_ach_wt\": \"SUM(recipes.bin1_act + recipes.bin2_act + recipes.bin3_act + recipes.bin4_act + recipes.bin5_act + recipes.bin6_act + recipes.bin7_act + recipes.bin8_act + recipes.bin9_act + recipes.bin10_act + recipes.bin11_act + recipes.bin12_act)\",\n      \"total_error_kg\": \"SUM((recipes.bin1_act - recipes.bin1_sp) + (recipes.bin2_act - recipes.bin2_sp) + (recipes.bin3_act - recipes.bin3_sp) + (recipes.bin4_act - recipes.bin4_sp) + (recipes.bin5_act - recipes.bin5_sp) + (recipes.bin6_act - recipes.bin6_sp) + (recipes.bin7_act - recipes.bin7_sp) + (recipes.bin8_act - recipes.bin8_sp) + (recipes.bin9_act - recipes.bin9_sp) + (recipes.bin10_act - recipes.bin10_sp) + (recipes.bin11_act - recipes.bin11_sp) + (recipes.bin12_act - recipes.bin12_sp))\",\n      \"total_error_pct\": \"CASE WHEN SUM(recipes.bin1_sp + recipes.bin2_sp + recipes.bin3_sp + recipes.bin4_sp + recipes.bin5_sp + recipes.bin6_sp + recipes.bin7_sp + recipes.bin8_sp + recipes.bin9_sp + recipes.bin10_sp + recipes.bin11_sp + recipes.bin12_sp) = 0 THEN NULL ELSE ((SUM(recipes.bin1_act + recipes.bin2_act + recipes.bin3_act + recipes.bin4_act + recipes.bin5_act + recipes.bin6_act + recipes.bin7_act + recipes.bin8_act + recipes.bin9_act + recipes.bin10_act + recipes.bin11_act + recipes.bin12_act) - SUM(recipes.bin1_sp + recipes.bin2_sp + recipes.bin3_sp + recipes.bin4_sp + recipes.bin5_sp + recipes.bin6_sp + recipes.bin7_sp + recipes.bin8_sp + recipes.bin9_sp + recipes.bin10_sp + recipes.bin11_sp + recipes.bin12_sp)) / SUM(recipes.bin1_sp + recipes.bin2_sp + recipes.bin3_sp + recipes.bin4_sp + recipes.bin5_sp + recipes.bin6_sp + recipes.bin7_sp + recipes.bin8_sp + recipes.bin9_sp + recipes.bin10_sp + recipes.bin11_sp + recipes.bin12_sp)) * 100 END\"\n    },\n    \"formatters\": {\n      \"row_error_pct\": \"percent(2)\",\n      \"total_error_pct\": \"percent(2)\",\n      \"print_date\": \"date(YYYY-MM-DD)\",\n      \"row_set_wt\": \"number(2)\",\n      \"row_ach_wt\": \"number(2)\",\n      \"row_error_kg\": \"number(2)\",\n      \"total_set_wt\": \"number(2)\",\n      \"total_ach_wt\": \"number(2)\",\n      \"total_error_kg\": \"number(2)\"\n    },\n    \"order_by\": {\n      \"rows\": [\n        \"row_material_name ASC\",\n        \"row_set_wt DESC\"\n      ]\n    },\n    \"notes\": \"Totals are computed via the authoritative mapping_override directly on recipes.* across the same filtered recipe rows. Detail rows exclude blank material names but retain zero-weight entries. Date filtering uses recipes.start_time; inclusivity over whole days should be implemented per dialect.\",\n    \"header_tokens\": [\n      \"plant_name\",\n      \"location\",\n      \"from_date\",\n      \"to_date\",\n      \"print_date\",\n      \"recipe_code\",\n      \"report_title\",\n      \"company_name\",\n      \"page_info\"\n    ],\n    \"row_tokens\": [\n      \"row_sl_no\",\n      \"row_material_name\",\n      \"row_set_wt\",\n      \"row_ach_wt\",\n      \"row_error_kg\",\n      \"row_error_pct\"\n    ],\n    \"totals\": {\n      \"total_set_wt\": \"SUM(recipes.bin1_sp + recipes.bin2_sp + recipes.bin3_sp + recipes.bin4_sp + recipes.bin5_sp + recipes.bin6_sp + recipes.bin7_sp + recipes.bin8_sp + recipes.bin9_sp + recipes.bin10_sp + recipes.bin11_sp + recipes.bin12_sp)\",\n      \"total_ach_wt\": \"SUM(recipes.bin1_act + recipes.bin2_act + recipes.bin3_act + recipes.bin4_act + recipes.bin5_act + recipes.bin6_act + recipes.bin7_act + recipes.bin8_act + recipes.bin9_act + recipes.bin10_act + recipes.bin11_act + recipes.bin12_act)\",\n      \"total_error_kg\": \"SUM((recipes.bin1_act - recipes.bin1_sp) + (recipes.bin2_act - recipes.bin2_sp) + (recipes.bin3_act - recipes.bin3_sp) + (recipes.bin4_act - recipes.bin4_sp) + (recipes.bin5_act - recipes.bin5_sp) + (recipes.bin6_act - recipes.bin6_sp) + (recipes.bin7_act - recipes.bin7_sp) + (recipes.bin8_act - recipes.bin8_sp) + (recipes.bin9_act - recipes.bin9_sp) + (recipes.bin10_act - recipes.bin10_sp) + (recipes.bin11_act - recipes.bin11_sp) + (recipes.bin12_act - recipes.bin12_sp))\",\n      \"total_error_pct\": \"CASE WHEN SUM(recipes.bin1_sp + recipes.bin2_sp + recipes.bin3_sp + recipes.bin4_sp + recipes.bin5_sp + recipes.bin6_sp + recipes.bin7_sp + recipes.bin8_sp + recipes.bin9_sp + recipes.bin10_sp + recipes.bin11_sp + recipes.bin12_sp) = 0 THEN NULL ELSE ((SUM(recipes.bin1_act + recipes.bin2_act + recipes.bin3_act + recipes.bin4_act + recipes.bin5_act + recipes.bin6_act + recipes.bin7_act + recipes.bin8_act + recipes.bin9_act + recipes.bin10_act + recipes.bin11_act + recipes.bin12_act) - SUM(recipes.bin1_sp + recipes.bin2_sp + recipes.bin3_sp + recipes.bin4_sp + recipes.bin5_sp + recipes.bin6_sp + recipes.bin7_sp + recipes.bin8_sp + recipes.bin9_sp + recipes.bin10_sp + recipes.bin11_sp + recipes.bin12_sp)) / SUM(recipes.bin1_sp + recipes.bin2_sp + recipes.bin3_sp + recipes.bin4_sp + recipes.bin5_sp + recipes.bin6_sp + recipes.bin7_sp + recipes.bin8_sp + recipes.bin9_sp + recipes.bin10_sp + recipes.bin11_sp + recipes.bin12_sp)) * 100 END\"\n    },\n    \"row_order\": [\n      \"row_material_name ASC\",\n      \"row_set_wt DESC\"\n    ],\n    \"literals\": {}\n  },\n  \"sql_pack\": {\n    \"dialect\": \"sqlite\",\n    \"script\": \"-- HEADER SELECT --\\nSELECT\\n  :plant_name AS plant_name,\\n  :location AS location,\\n  :from_date AS from_date,\\n  :to_date AS to_date,\\n  :print_date AS print_date,\\n  :recipe_code AS recipe_code,\\n  'Consumption report' AS report_title,\\n  'Indian Industrial Machines Pvt. Ltd.' AS company_name,\\n  :page_info AS page_info;\\n-- ROWS SELECT --\\nWITH base_filtered AS (\\n  SELECT *\\n  FROM recipes\\n  WHERE DATE(recipes.start_time) >= DATE(:from_date)\\n    AND DATE(recipes.start_time) <= DATE(:to_date)\\n    AND (\\n      :recipe_code IS NULL OR TRIM(:recipe_code) = '' OR recipes.recipe_name = :recipe_code\\n    )\\n),\\nlong_bins AS (\\n  SELECT TRIM(r.bin1_content) AS material_name, COALESCE(r.bin1_sp, 0) AS set_wt_kg, COALESCE(r.bin1_act, 0) AS ach_wt_kg FROM base_filtered r\\n  UNION ALL SELECT TRIM(r.bin2_content), COALESCE(r.bin2_sp, 0), COALESCE(r.bin2_act, 0) FROM base_filtered r\\n  UNION ALL SELECT TRIM(r.bin3_content), COALESCE(r.bin3_sp, 0), COALESCE(r.bin3_act, 0) FROM base_filtered r\\n  UNION ALL SELECT TRIM(r.bin4_content), COALESCE(r.bin4_sp, 0), COALESCE(r.bin4_act, 0) FROM base_filtered r\\n  UNION ALL SELECT TRIM(r.bin5_content), COALESCE(r.bin5_sp, 0), COALESCE(r.bin5_act, 0) FROM base_filtered r\\n  UNION ALL SELECT TRIM(r.bin6_content), COALESCE(r.bin6_sp, 0), COALESCE(r.bin6_act, 0) FROM base_filtered r\\n  UNION ALL SELECT TRIM(r.bin7_content), COALESCE(r.bin7_sp, 0), COALESCE(r.bin7_act, 0) FROM base_filtered r\\n  UNION ALL SELECT TRIM(r.bin8_content), COALESCE(r.bin8_sp, 0), COALESCE(r.bin8_act, 0) FROM base_filtered r\\n  UNION ALL SELECT TRIM(r.bin9_content), COALESCE(r.bin9_sp, 0), COALESCE(r.bin9_act, 0) FROM base_filtered r\\n  UNION ALL SELECT TRIM(r.bin10_content), COALESCE(r.bin10_sp, 0), COALESCE(r.bin10_act, 0) FROM base_filtered r\\n  UNION ALL SELECT TRIM(r.bin11_content), COALESCE(r.bin11_sp, 0), COALESCE(r.bin11_act, 0) FROM base_filtered r\\n  UNION ALL SELECT TRIM(r.bin12_content), COALESCE(r.bin12_sp, 0), COALESCE(r.bin12_act, 0) FROM base_filtered r\\n),\\nlong_bins_clean AS (\\n  SELECT material_name, set_wt_kg, ach_wt_kg\\n  FROM long_bins\\n  WHERE material_name IS NOT NULL AND TRIM(material_name) <> ''\\n)\\nSELECT\\n  ROW_NUMBER() OVER (ORDER BY TRIM(material_name) ASC) AS row_sl_no,\\n  TRIM(material_name) AS row_material_name,\\n  SUM(set_wt_kg) AS row_set_wt,\\n  SUM(ach_wt_kg) AS row_ach_wt,\\n  SUM(ach_wt_kg) - SUM(set_wt_kg) AS row_error_kg,\\n  CASE WHEN SUM(set_wt_kg) = 0 THEN NULL ELSE (SUM(ach_wt_kg) - SUM(set_wt_kg)) / SUM(set_wt_kg) * 100 END AS row_error_pct\\nFROM long_bins_clean\\nGROUP BY TRIM(material_name)\\nORDER BY row_material_name ASC, row_set_wt DESC;\\n-- TOTALS SELECT --\\nWITH base_filtered AS (\\n  SELECT *\\n  FROM recipes\\n  WHERE DATE(recipes.start_time) >= DATE(:from_date)\\n    AND DATE(recipes.start_time) <= DATE(:to_date)\\n    AND (\\n      :recipe_code IS NULL OR TRIM(:recipe_code) = '' OR recipes.recipe_name = :recipe_code\\n    )\\n)\\nSELECT\\n  SUM(r.bin1_sp + r.bin2_sp + r.bin3_sp + r.bin4_sp + r.bin5_sp + r.bin6_sp + r.bin7_sp + r.bin8_sp + r.bin9_sp + r.bin10_sp + r.bin11_sp + r.bin12_sp) AS total_set_wt,\\n  SUM(r.bin1_act + r.bin2_act + r.bin3_act + r.bin4_act + r.bin5_act + r.bin6_act + r.bin7_act + r.bin8_act + r.bin9_act + r.bin10_act + r.bin11_act + r.bin12_act) AS total_ach_wt,\\n  SUM((r.bin1_act - r.bin1_sp) + (r.bin2_act - r.bin2_sp) + (r.bin3_act - r.bin3_sp) + (r.bin4_act - r.bin4_sp) + (r.bin5_act - r.bin5_sp) + (r.bin6_act - r.bin6_sp) + (r.bin7_act - r.bin7_sp) + (r.bin8_act - r.bin8_sp) + (r.bin9_act - r.bin9_sp) + (r.bin10_act - r.bin10_sp) + (r.bin11_act - r.bin11_sp) + (r.bin12_act - r.bin12_sp)) AS total_error_kg,\\n  CASE WHEN SUM(r.bin1_sp + r.bin2_sp + r.bin3_sp + r.bin4_sp + r.bin5_sp + r.bin6_sp + r.bin7_sp + r.bin8_sp + r.bin9_sp + r.bin10_sp + r.bin11_sp + r.bin12_sp) = 0 THEN NULL ELSE ((SUM(r.bin1_act + r.bin2_act + r.bin3_act + r.bin4_act + r.bin5_act + r.bin6_act + r.bin7_act + r.bin8_act + r.bin9_act + r.bin10_act + r.bin11_act + r.bin12_act) - SUM(r.bin1_sp + r.bin2_sp + r.bin3_sp + r.bin4_sp + r.bin5_sp + r.bin6_sp + r.bin7_sp + r.bin8_sp + r.bin9_sp + r.bin10_sp + r.bin11_sp + r.bin12_sp)) / SUM(r.bin1_sp + r.bin2_sp + r.bin3_sp + r.bin4_sp + r.bin5_sp + r.bin6_sp + r.bin7_sp + r.bin8_sp + r.bin9_sp + r.bin10_sp + r.bin11_sp + r.bin12_sp)) * 100 END AS total_error_pct\\nFROM base_filtered r;\",\n    \"entrypoints\": {\n      \"header\": \"SELECT\\n  :plant_name AS plant_name,\\n  :location AS location,\\n  :from_date AS from_date,\\n  :to_date AS to_date,\\n  :print_date AS print_date,\\n  :recipe_code AS recipe_code,\\n  'Consumption report' AS report_title,\\n  'Indian Industrial Machines Pvt. Ltd.' AS company_name,\\n  :page_info AS page_info;\",\n      \"rows\": \"WITH base_filtered AS (\\n  SELECT *\\n  FROM recipes\\n  WHERE DATE(recipes.start_time) >= DATE(:from_date)\\n    AND DATE(recipes.start_time) <= DATE(:to_date)\\n    AND (\\n      :recipe_code IS NULL OR TRIM(:recipe_code) = '' OR recipes.recipe_name = :recipe_code\\n    )\\n),\\nlong_bins AS (\\n  SELECT TRIM(r.bin1_content) AS material_name, COALESCE(r.bin1_sp, 0) AS set_wt_kg, COALESCE(r.bin1_act, 0) AS ach_wt_kg FROM base_filtered r\\n  UNION ALL SELECT TRIM(r.bin2_content), COALESCE(r.bin2_sp, 0), COALESCE(r.bin2_act, 0) FROM base_filtered r\\n  UNION ALL SELECT TRIM(r.bin3_content), COALESCE(r.bin3_sp, 0), COALESCE(r.bin3_act, 0) FROM base_filtered r\\n  UNION ALL SELECT TRIM(r.bin4_content), COALESCE(r.bin4_sp, 0), COALESCE(r.bin4_act, 0) FROM base_filtered r\\n  UNION ALL SELECT TRIM(r.bin5_content), COALESCE(r.bin5_sp, 0), COALESCE(r.bin5_act, 0) FROM base_filtered r\\n  UNION ALL SELECT TRIM(r.bin6_content), COALESCE(r.bin6_sp, 0), COALESCE(r.bin6_act, 0) FROM base_filtered r\\n  UNION ALL SELECT TRIM(r.bin7_content), COALESCE(r.bin7_sp, 0), COALESCE(r.bin7_act, 0) FROM base_filtered r\\n  UNION ALL SELECT TRIM(r.bin8_content), COALESCE(r.bin8_sp, 0), COALESCE(r.bin8_act, 0) FROM base_filtered r\\n  UNION ALL SELECT TRIM(r.bin9_content), COALESCE(r.bin9_sp, 0), COALESCE(r.bin9_act, 0) FROM base_filtered r\\n  UNION ALL SELECT TRIM(r.bin10_content), COALESCE(r.bin10_sp, 0), COALESCE(r.bin10_act, 0) FROM base_filtered r\\n  UNION ALL SELECT TRIM(r.bin11_content), COALESCE(r.bin11_sp, 0), COALESCE(r.bin11_act, 0) FROM base_filtered r\\n  UNION ALL SELECT TRIM(r.bin12_content), COALESCE(r.bin12_sp, 0), COALESCE(r.bin12_act, 0) FROM base_filtered r\\n),\\nlong_bins_clean AS (\\n  SELECT material_name, set_wt_kg, ach_wt_kg\\n  FROM long_bins\\n  WHERE material_name IS NOT NULL AND TRIM(material_name) <> ''\\n)\\nSELECT\\n  ROW_NUMBER() OVER (ORDER BY TRIM(material_name) ASC) AS row_sl_no,\\n  TRIM(material_name) AS row_material_name,\\n  SUM(set_wt_kg) AS row_set_wt,\\n  SUM(ach_wt_kg) AS row_ach_wt,\\n  SUM(ach_wt_kg) - SUM(set_wt_kg) AS row_error_kg,\\n  CASE WHEN SUM(set_wt_kg) = 0 THEN NULL ELSE (SUM(ach_wt_kg) - SUM(set_wt_kg)) / SUM(set_wt_kg) * 100 END AS row_error_pct\\nFROM long_bins_clean\\nGROUP BY TRIM(material_name)\\nORDER BY row_material_name ASC, row_set_wt DESC;\",\n      \"totals\": \"WITH base_filtered AS (\\n  SELECT *\\n  FROM recipes\\n  WHERE DATE(recipes.start_time) >= DATE(:from_date)\\n    AND DATE(recipes.start_time) <= DATE(:to_date)\\n    AND (\\n      :recipe_code IS NULL OR TRIM(:recipe_code) = '' OR recipes.recipe_name = :recipe_code\\n    )\\n)\\nSELECT\\n  SUM(r.bin1_sp + r.bin2_sp + r.bin3_sp + r.bin4_sp + r.bin5_sp + r.bin6_sp + r.bin7_sp + r.bin8_sp + r.bin9_sp + r.bin10_sp + r.bin11_sp + r.bin12_sp) AS total_set_wt,\\n  SUM(r.bin1_act + r.bin2_act + r.bin3_act + r.bin4_act + r.bin5_act + r.bin6_act + r.bin7_act + r.bin8_act + r.bin9_act + r.bin10_act + r.bin11_act + r.bin12_act) AS total_ach_wt,\\n  SUM((r.bin1_act - r.bin1_sp) + (r.bin2_act - r.bin2_sp) + (r.bin3_act - r.bin3_sp) + (r.bin4_act - r.bin4_sp) + (r.bin5_act - r.bin5_sp) + (r.bin6_act - r.bin6_sp) + (r.bin7_act - r.bin7_sp) + (r.bin8_act - r.bin8_sp) + (r.bin9_act - r.bin9_sp) + (r.bin10_act - r.bin10_sp) + (r.bin11_act - r.bin11_sp) + (r.bin12_act - r.bin12_sp)) AS total_error_kg,\\n  CASE WHEN SUM(r.bin1_sp + r.bin2_sp + r.bin3_sp + r.bin4_sp + r.bin5_sp + r.bin6_sp + r.bin7_sp + r.bin8_sp + r.bin9_sp + r.bin10_sp + r.bin11_sp + r.bin12_sp) = 0 THEN NULL ELSE ((SUM(r.bin1_act + r.bin2_act + r.bin3_act + r.bin4_act + r.bin5_act + r.bin6_act + r.bin7_act + r.bin8_act + r.bin9_act + r.bin10_act + r.bin11_act + r.bin12_act) - SUM(r.bin1_sp + r.bin2_sp + r.bin3_sp + r.bin4_sp + r.bin5_sp + r.bin6_sp + r.bin7_sp + r.bin8_sp + r.bin9_sp + r.bin10_sp + r.bin11_sp + r.bin12_sp)) / SUM(r.bin1_sp + r.bin2_sp + r.bin3_sp + r.bin4_sp + r.bin5_sp + r.bin6_sp + r.bin7_sp + r.bin8_sp + r.bin9_sp + r.bin10_sp + r.bin11_sp + r.bin12_sp)) * 100 END AS total_error_pct\\nFROM base_filtered r;\"\n    },\n    \"params\": {\n      \"required\": [\n        \"from_date\",\n        \"to_date\"\n      ],\n      \"optional\": [\n        \"recipe_code\",\n        \"plant_name\",\n        \"location\",\n        \"print_date\",\n        \"page_info\"\n      ]\n    },\n    \"notes\": \"sqlite dialect. Date filtering is inclusive using DATE(recipes.start_time) between DATE(:from_date) and DATE(:to_date). Optional equality filter on recipe_code applies only when provided (non-empty). Reshape implemented via UNION ALL across 12 bins; blanks trimmed/removed at detail level; totals computed directly from recipes.* per contract.\"\n  },\n  \"output_schemas\": {\n    \"header\": [\n      \"plant_name\",\n      \"location\",\n      \"from_date\",\n      \"to_date\",\n      \"print_date\",\n      \"recipe_code\",\n      \"report_title\",\n      \"company_name\",\n      \"page_info\"\n    ],\n    \"rows\": [\n      \"row_sl_no\",\n      \"row_material_name\",\n      \"row_set_wt\",\n      \"row_ach_wt\",\n      \"row_error_kg\",\n      \"row_error_pct\"\n    ],\n    \"totals\": [\n      \"total_set_wt\",\n      \"total_ach_wt\",\n      \"total_error_kg\",\n      \"total_error_pct\"\n    ]\n  },\n  \"needs_user_fix\": [\n    \"Contract join keys are empty (parent_key/child_key). Mirrored Step-4 as-is; if join semantics are required, please supply non-empty keys.\",\n    \"Row/totals percentage computations follow the exact contract expressions. In SQLite, integer division may occur depending on column types; adjust source types if true decimals are required.\"\n  ],\n  \"dry_run\": null,\n  \"summary\": {\n    \"dialect\": \"sqlite\",\n    \"params\": {\n      \"required\": [\n        \"from_date\",\n        \"to_date\"\n      ],\n      \"optional\": [\n        \"recipe_code\",\n        \"plant_name\",\n        \"location\",\n        \"print_date\",\n        \"page_info\"\n      ]\n    },\n    \"notes\": \"Implements Step-4 contract exactly. Detail rows are generated via UNION ALL long_bins over recipes bin columns with filters applied first; rows grouped by trimmed material_name. Totals computed directly from recipes.* across the same filtered rows. Optional recipe_code filter applied only when provided (non-empty).\"\n  }\n}",
        "refusal": null,
        "role": "assistant",
        "annotations": [],
        "audio": null,
        "function_call": null,
        "tool_calls": null
      }
    }
  ],
  "created": 1760902065,
  "model": "gpt-5-2025-08-07",
  "object": "chat.completion",
  "service_tier": "default",
  "system_fingerprint": null,
  "usage": {
    "completion_tokens": 8514,
    "prompt_tokens": 264654,
    "total_tokens": 273168,
    "completion_tokens_details": {
      "accepted_prediction_tokens": 0,
      "audio_tokens": 0,
      "reasoning_tokens": 1920,
      "rejected_prediction_tokens": 0
    },
    "prompt_tokens_details": {
      "audio_tokens": 0,
      "cached_tokens": 0
    }
  }
}